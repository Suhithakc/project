import cv2
import numpy as np
import tensorflow as tf
from google.colab.patches import cv2_imshow
mnist = tf.keras.datasets.mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()
x_train = tf.keras.utils.normalize(x_train, axis=1)
x_test = tf.keras.utils.normalize(x_test, axis=1)
model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten(input_shape=(28, 28)))
model.add(tf.keras.layers.Dense(128, activation='relu'))
model.add(tf.keras.layers.Dense(128, activation='relu'))
model.add(tf.keras.layers.Dense(10, activation='softmax'))
model.compile(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy'])
model.fit(x_train, y_train, epochs=3)
model.save('character.model')
model = tf.keras.models.load_model('character.model')
image_path = '/content/s.jpg'
image = cv2.imread(image_path)
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
resized = cv2.resize(gray, (28, 28))
normalized = resized / 255.0
flattened = normalized.reshape(1, 28, 28)
prediction = model.predict(flattened)
predicted_label = np.argmax(prediction[0])
alphabets = ['A', 'B','C','D','E','F','G','S']
predicted_alphabet = alphabets[predicted_label]
print('The predicted output is:', predicted_alphabet)
cv2_imshow(image)
